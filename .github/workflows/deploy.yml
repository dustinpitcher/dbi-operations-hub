name: 🚀 Deploy DBI Operations Hub to Azure

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 📋 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🧪 Run basic validation tests
      run: |
        echo "🔍 Validating application structure..."
        python -c "
        import sys
        sys.path.append('.')
        try:
            from config import get_config
            from utils.environment import EnvironmentValidator
            from utils.file_validation import FileValidator
            print('✅ All imports successful')
            print('✅ Configuration validation passed')
            print('✅ Application structure is valid')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            sys.exit(1)
        except Exception as e:
            print(f'❌ Validation error: {e}')
            sys.exit(1)
        "
    
    - name: 🏗️ Create deployment artifact
      run: |
        # Create logs directory for deployment
        mkdir -p logs
        echo "📦 Deployment artifact prepared"
    
    - name: 📤 Upload artifact for deployment jobs
      uses: actions/upload-artifact@v4
      with:
        name: python-app
        path: |
          .
          !.git/
          !.github/
          !venv/
          !__pycache__/
          !*.pyc
          !.env*
          !uploads/
          !staging/
          !logs/*.log

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: 📥 Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: python-app
        path: .

    - name: 🚀 Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'dbi-operations-hub'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
    
    - name: 🏥 Health check after deployment
      run: |
        echo "⏳ Waiting for deployment to stabilize..."
        sleep 30
        
        echo "🏥 Running health check..."
        HEALTH_URL="https://dbi-operations-hub.azurewebsites.net/health"
        
        for i in {1..5}; do
          echo "Attempt $i/5..."
          if curl -f -s "$HEALTH_URL" | grep -q '"status": "healthy"'; then
            echo "✅ Health check passed!"
            break
          else
            echo "⏳ Health check failed, retrying in 10 seconds..."
            sleep 10
          fi
          
          if [ $i -eq 5 ]; then
            echo "❌ Health check failed after 5 attempts"
            exit 1
          fi
        done
    
    - name: 📊 Post-deployment summary
      run: |
        echo "🎉 DBI Operations Hub deployed successfully!"
        echo "🌐 Application URL: https://dbi-operations-hub.azurewebsites.net"
        echo "📊 Health Check: https://dbi-operations-hub.azurewebsites.net/health"
        echo "🧹 Manual Cleanup: https://dbi-operations-hub.azurewebsites.net/system/cleanup"
        echo ""
        echo "🏗️ Modules available:"
        echo "  🏭 Assembly Management: https://dbi-operations-hub.azurewebsites.net/assembly/"
        echo "  💰 Purchase Orders: https://dbi-operations-hub.azurewebsites.net/po/"
        echo "  🚫 Supplier Management: https://dbi-operations-hub.azurewebsites.net/po/manage-suppliers"
